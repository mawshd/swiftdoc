{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/cvflowlayouts\/compositevc\/setupdatasource()"]}],"hierarchy":{"paths":[["doc:\/\/com.flowlayouts\/documentation\/CVFlowLayouts","doc:\/\/com.flowlayouts\/documentation\/CVFlowLayouts\/CompositeVC"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setupDataSource"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]}],"identifier":{"url":"doc:\/\/com.flowlayouts\/documentation\/CVFlowLayouts\/CompositeVC\/setupDataSource()","interfaceLanguage":"swift"},"metadata":{"externalID":"s:13CVFlowLayouts11CompositeVCC15setupDataSourceyyF","role":"symbol","title":"setupDataSource()","roleHeading":"Instance Method","modules":[{"name":"CVFlowLayouts"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setupDataSource"},{"kind":"text","text":"()"}],"extendedModule":"CVFlowLayouts"},"references":{"doc://com.flowlayouts/documentation/CVFlowLayouts/CompositeVC/setupDataSource()":{"identifier":"doc:\/\/com.flowlayouts\/documentation\/CVFlowLayouts\/CompositeVC\/setupDataSource()","abstract":[],"type":"topic","role":"symbol","title":"setupDataSource()","url":"\/documentation\/cvflowlayouts\/compositevc\/setupdatasource()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setupDataSource","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://com.flowlayouts/documentation/CVFlowLayouts/CompositeVC":{"abstract":[{"text":"This class implemented compositional collection view layout. as this helps you the handle more complex UI, suppose you are required to create a list of items which are different in type, relevant items are grouped together into separate sections. This kind of problem can be solved using compositional layout, to add more it allows you to add orthogonal behavior, e.g you have vertical listing for, specific section you need horizontal scrolling behavior, in normal layout\/flow layout you canâ€™t achieve this with single collection view, you have to add another horizontal collection inside collection view cell, so in a way you have to handle two collections.","type":"text"}],"url":"\/documentation\/cvflowlayouts\/compositevc","title":"CompositeVC","identifier":"doc:\/\/com.flowlayouts\/documentation\/CVFlowLayouts\/CompositeVC","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CompositeVC"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"CompositeVC","kind":"identifier"}]},"doc://com.flowlayouts/documentation/CVFlowLayouts":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.flowlayouts\/documentation\/CVFlowLayouts","role":"collection","title":"CVFlowLayouts","abstract":[{"text":"Collection view Layouts help us to render items on screen. this enables us to manage the sizes, dimension of each item.","type":"text"}],"url":"\/documentation\/cvflowlayouts"}}}